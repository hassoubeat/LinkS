!!!
%html{lang: "ja"}
  %head
    %meta{name:"viewport", content:"width=device-width,initial-scale=1.0"}
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %title LinkS
    = csrf_meta_tags
    = csp_meta_tag

    -# Bootstrap CSS
    %link{rel: "stylesheet", href: "https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css", integrity:"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T", crossorigin:"anonymous"}
    -# AdminLTE CSS (Bootstrap拡張FW)
    = stylesheet_link_tag 'AdminLTE', media: 'all'
    -# FontAwesome CSS
    %link{rel: "stylesheet", href: "https://use.fontawesome.com/releases/v5.7.2/css/all.css", integrity:"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr", crossorigin:"anonymous"}
    -# jQuery toast CSS (jQuery Plugin CSS)
    = stylesheet_link_tag 'jquery.toast.min', media: 'all'
    -# App CSS
    = stylesheet_link_tag 'application', media: 'all'
    -# Genre CSS
    = stylesheet_link_tag 'genre', media: 'all'


    -# Google Font(Comfortaa )
    %link{rel: "stylesheet", href: "https://fonts.googleapis.com/css?family=Comfortaa"}
    -# Google Font(Londrina+Shadow)
    %link{rel: "stylesheet", href: "https://fonts.googleapis.com/css?family=Londrina+Shadow"}
    -# Google Font(MPlus 1p)
    %link{rel: "stylesheet", href: "https://fonts.googleapis.com/css?family=M+PLUS+Rounded+1c"}

  %body{"data-spy" => "scroll", "data-target" => "#navbarNav"}
    %div.animsition
      - if flash[:info]
        %div.info-message.hide
          = flash[:info]
      - if flash[:error]
        %div.error-message.hide
          = flash[:error]
      %nav.navbar.navbar-expand-md.navbar-default.navbar-fixed-top
        %a.navbar-brand{:href => "/"} LinkS
        %button.navbar-toggler{"aria-controls" => "navbarNav", "aria-expanded" => "false", "aria-label" => "ナビゲーションの切替", "data-target" => "#navbarNav", "data-toggle" => "collapse", :type => "button"}
          %i.nav-tab.fas.fa-list-ul
        #navbarNav.collapse.navbar-collapse
          %ul.navbar-nav.mr-auto
          %ul.navbar-nav
            - if @current_user
              %li.nav-item
                %a.nav-link{:href => "/logout"}
                  ログアウト
            - else
              %li.nav-item
                %a.nav-link{:href => "/"}
                  ログイン
      / サイドバー
      - if login_user?(@user.id)
        %aside.main-sidebar.sidebar-default-skin
          %section.sidebar{:style => "height: auto;"}
            %form{:action => "", :method => "post"}
              / サイドバーメニュー
              %ul.sidebar-menu.fixed.tree.sortable{"data-widget" => "tree"}
                %li
                  .hidden-sidebar-brand
                    %span LinkS
                  .sidemenu
                    %i.fa.fa-folder
                    %span &nbsp;フォルダー
                    %a{:href => "#"}
                      %span.sidebar-folder-create
                        %i.far.fa-plus-square
                    %a#mock-folder-sort-button{:href => "#"}
                      %span.sidebar-folder-sort
                        %i.fas.fa-sort
                - @folders.each do |folder|
                  %li{class: "sidebar-folder sortable-item #{'selected' if folder.id == @folder.id}", "id" => "#{folder.id}"}
                    %a.text-ellipsis.sidemenu{:href => "/users/#{folder.user_id}/folders/#{folder.id}"}
                      - if folder.is_open == true
                        %i.fas.fa-share-alt &nbsp;
                      - else
                        %i.fas.fa-share-alt{"style" => "visibility:hidden;"} &nbsp;
                      %span.sidebar-folder-name= folder.name
                      %span.hide.sidebar-folder-note= folder.comment
              %input#result{:name => "result", :type => "hidden"}/
              %button#submit{:style => "display:none"} ソート確定
      / サイドバー
      / メインコンテンツ
      %div{"class" => "content-wrapper #{"hidden-sidebar" if !@folder.user_id.nil? and !login_user?(@folder.user_id)}"}
        = yield
        - if login_user?(@user.id)
          / フォルダー登録モーダル
          #folder-create-modal.modal.fade{"aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
            .modal-dialog.modal-xl{:role => "document"}
              .modal-content
                = form_tag("/users/#{@user.id}/folders", method: :post, id: "folder-create-form") do
                  .modal-header
                    %h5#exampleModalLabel.modal-title フォルダー
                    %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
                      %span{"aria-hidden" => "true"} ×
                  .modal-body.text-muted
                    .row
                      .col-12
                        .row
                          .col-12
                            .input-group.input-group.mb-3
                              .input-group-prepend
                                %span#inputGroup-sizing-lg.input-group-text
                                  %i.fa.fa-folder
                              #{text_field_tag 'folder[name]', "", class:"form-control", placeholder:"フォルダー名称", maxlength:'20' }
                          .col-12
                            .input-group.input-group.mb-3
                              .input-group-prepend
                                %span#inputGroup-sizing-lg.input-group-text
                                  %i.fas.fa-sticky-note
                              #{text_area_tag 'folder[comment]', "", class:"form-control", placeholder:"メモ", maxlength:'400' }
                          .col-12
                            .input-group.input-group.mb-3
                              %a.info-pop{"tabindex"=> "0", "data-toggle" => "popover", "data-trigger" => "click", "title" => "公開設定", "data-content" => "作成するフォルダーを他のユーザにも公開する場合は「公開」、そうでない場合は「非公開」を選択してください", "data-placement" => "auto"}
                                %i.fas.fa-info-circle &nbsp;公開設定
                          .col-12
                            .btn-group.btn-group-toggle{"data-toggle" => "buttons", "style" => "width:100%; margin-bottom:10px;"}
                              %label.btn.btn-outline-secondary.active{"style" => "width:50%; border-color: #6c757d;"}
                                #{radio_button_tag 'folder[is_open]', false, "checked" => true} 非公開
                              %label.btn.btn-outline-success{"style" => "width:50%; border-color: #28a745;"}
                                #{radio_button_tag 'folder[is_open]', true}
                                %i.fas.fa-share-alt &nbsp;公開
                    .modal-footer
                      - if @folders.size() >= Folder::FOLDER_CREATE_LIMIT
                        %button.btn.btn-danger{"disabled" => true} 作成可能なフォルダー数は#{Folder::FOLDER_CREATE_LIMIT}までです
                      - else
                        #{submit_tag "登録", :name => nil , :id => "folder_create_btn", :class => "btn btn-primary"}
                      %button.btn.btn-secondary{"data-dismiss" => "modal", :type => "button"} 閉じる
          / フォルダーソートモーダル
          #folder-sort-modal.modal.fade{"aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
            .modal-dialog.modal-xl{:role => "document"}
              .modal-content
                .modal-header
                  %h5#exampleModalLabel.modal-title フォルダーソート
                  %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
                    %span{"aria-hidden" => "true"} ×
                .modal-body.text-muted
                  .row
                    .col-12
                      %div{"style" => "margin-bottom:10px;"}
                        現在の順序でフォルダーの順番を登録します。
                        %br
                        %span.warning フォルダーをドラッグアンドドロップすることで順番を入れ替えることが可能です。
                  .modal-footer
                    %a#folder-sort-button.btn.btn-primary{:href => "/users/#{@user.id}/folders/sort/"} ソート
                    %button.btn.btn-secondary{"data-dismiss" => "modal", :type => "button"} 閉じる

      / 詳細エリア
      %div{"class" => "detail-area #{"hidden-sidebar" if !@folder.user_id.nil? and !login_user?(@folder.user_id)}"}
        .detail-area-title
          = @folder.name
        .detail-area-sub-title
        .detail-area-note
          = @folder.comment
      - if login_user?(@user.id)
        %div.sidebar-toggle-button
          %a{"href" => "#", "class" => "sidebar-toggle", "data-toggle" => "push-menu", "role" => "button"}
            %i.nav-tab.fas.fa-list-ul.pink
            %span.sr-only Toggle navigation
      - elsif login_check?
        %div.folder-like-button
          %a{"href" => "#" ,"class" => "folder-like", "role" => "button", "data-href": "/users/#{@user.id}/folders/#{@folder.id}/like"}
            %i{"class" => "folder-like-icon fas fa-thumbs-up #{'liked' if folder_liked?(session["user_id"], @folder.id)}"}
      %div.detail-area-toggle-button
        %span{"class" => "detail-area-toggle", "role" => "button"}
          %i.detail-toggle-icon.nav-tab.fas.fa-caret-up.pink
          %span.sr-only Toggle navigation
      %div.hide.hide-params
        %span{id: "intial_display_sidebar", class: "#{'active' if @intial_display_sidebar}"}
        %span{id: "intial_display_detail_area", class: "#{'active' if @intial_display_detail_area}"}
    -# jQuery
    = javascript_include_tag 'https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js'
    -# jQuery UI (jQuery Plugin)
    = javascript_include_tag 'http://code.jquery.com/ui/1.11.3/jquery-ui.js'
    -# jQuery Plugin UI TouchPunch (jQuery Plugin) スマホ環境でもD&Dを実現する
    = javascript_include_tag 'jquery.ui.touch-punch.min'
    -# Clipboard.js (jQuery Plugin)
    = javascript_include_tag 'clipboard.min'
    -# jQuery.toast.js (jQuery Plugin)
    = javascript_include_tag 'jquery.toast.min'
    -# Popper JS
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    -# Bootstrap JS
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    -# AdminLTE JS
    = javascript_include_tag 'adminlte'
    -# App JS
    = javascript_include_tag 'application'

    :javascript
      $(document).ready(function() {
        // サイドバーの高さを定義
        $(".main-sidebar").height($(window).height() - 62);
        // 画面表示時にアニメーション付きで遷移させる
        $('.animsition').animsition({
          inDuration: 700,
          outDuration: 500,
        }).one('animsition.inEnd',function(){
          // 画面表示アニメーション実行後処理(コールバック)

          // サイドバーの初期表示有無(スマホ限定)
          if ($("#intial_display_sidebar").hasClass("active")) {
            var width = $(window).width();
            if (width < 768) {
              // 現在の画面サイズがスマホサイズかつ、サイドバー初期表示が有効な場合サイドバーを表示する
              $('.sidebar-toggle')[0].click();
            }
          }
          // 詳細エリアの初期表示有無
          if ($("#intial_display_detail_area").hasClass("active")) {
            $('.detail-area-toggle')[0].click();
          }
          // インフォメーションポップアップの設定
          $(".info-pop").popover();
        });
        // フォルダーのソート確定処理
        $(".sortable").sortable({
          items: '.sortable-item',
        });
        $(".sortable").disableSelection();

        // インフォメーションメッセージの表示
        var info_message = $(".info-message").text();
        if (info_message) {
          viewToaster(info_message, "info");
        }
        // エラーメッセージの表示
        var error_message = $(".error-message").text();
        if (error_message) {
          viewToaster(error_message, "error");
        }
      });



      // 詳細テキスト表示エリアを切り替えるイベント
      $('.detail-area-toggle-button').click(function(){
        toggleDetailArea();
      });

      // いいねボタン押下時のイベント
      $('.folder-like').click(function(){
        $(".folder-like-icon").toggleClass("liked");
        $.ajax({
          type: 'GET',
          url: $(this).attr("data-href"),
          dataType: 'json',
          success: function(json){
            if (json['liked']) {
              $(".folder-like-icon").addClass("liked");
            } else {
              $(".folder-like-icon").removeClass("liked");
            }
            $(".content-header-folder-likes").text(json['like_count'])
            viewToaster(json['info_message'], "info")
          }
        });
      });

      // サイドバーのフォルダー名マウスホバー時に詳細エリアに情報を表示する
      $('.sidebar-folder').hover(function(){
          var folder_name = $(this).find('.sidebar-folder-name').text();
          var folder_note = $(this).find('.sidebar-folder-note').text();
          setDetailArea(folder_name, "", folder_note, "");
        },
        function() {
        }
      );

      // コンテンツヘッダーのインフォメーションアイコンを押下時に詳細エリアに情報を表示する
      $('.content-header-folder-info').click(function(){
          var folder_name = $('.content-header-folder-name').text();
          var folder_note = $('.content-header-folder-note').text();
          setDetailArea(folder_name, "", folder_note, "");
          // 非表示の時に表示
          if(!$(".detail-area").hasClass('active')){
            toggleDetailArea();
          }
      });

      // リンクのインフォメーションアイコンを押下時に詳細エリアに情報を表示する
      $('.link-info').click(function(){
          var link_name = $(this).parents(".link-box").find('.link-name').text();
          var link_url = $(this).parents(".link-box").find('.link-url').text();
          var link_note = $(this).parents(".link-box").find('.link-note').text();
          var color = $(this).parents(".link-box").attr("class").split(" ")[0].split("-")[3];
          setDetailArea(link_name, link_url, link_note, color);
          // 非表示の時に表示
          if(!$(".detail-area").hasClass('active')){
            toggleDetailArea();
          }
      });

      // コピーアイコンクリック時にURLをコピーする処理
      $('.link-info').click(function(){
        $(this).attr("url-copy");
      });

      // フォルダー作成時にスマホ画面だった場合は、サイドバーを閉じる
      $('.sidebar-folder-create').click(function(){
        var width = $(window).width();
        if (width < 768) {
          $('.sidebar-toggle')[0].click();
        }
        $('#folder-create-modal').modal();
      });

      // リンク登録時のカラースキンクリック時の挙動
      $("[id^='link-create-skin-type']").click(function(){
        // 一度すべてのスキンからactive要素を除外
        $("[id^='link-create-skin-type']").removeClass("active");
        $(this).addClass("active");
        $("#link-create-skin-type-form").val($(this).attr("link-skin-data"));
      });

      // リンク変更時のカラースキンクリック時の挙動
      $("[id^='link-edit-skin-type']").click(function(){
        // 一度すべてのスキンからactive要素を除外
        $("[id^='link-edit-skin-type']").removeClass("active");
        $(this).addClass("active");
        $("#mock-link-edit-skin-type-form").val($(this).attr("link-skin-data"));
      });

      // リンク変更ボタン押下時の挙動
      $("[id^='link-edit-button-']").click(function(){
        // リンク変更フォームの値を空にする
        $("#mock-link-edit-name-form").val("");
        $("#mock-link-edit-url-form").val("");
        $("#mock-link-edit-comment-form").val("");
        $("#mock-link-edit-skin-type-form").val("");
        $("#editing-link-id").val("");
        // カラースキンの選択状態をクリア、初期値にセット
        $("[id^='link-edit-skin-type']").removeClass("active");
        $("#mock-link-edit-skin-type-default").addClass("active");

        // リンク変更フォームに値をセットする
        var id = $(this).attr("id").split("-")[3];
        var form = $("#link-edit-form-" + id);
        $("#mock-link-edit-name-form").val(form.children("#link-edit-name-form").val());
        $("#mock-link-edit-url-form").val(form.children("#link-edit-url-form").val());
        $("#mock-link-edit-comment-form").val(form.children("#link-edit-comment-form").val());
        $("#mock-link-edit-skin-type-form").val(form.children("#link-edit-skin-type-form").val());
        $("#link-edit-skin-type-" + form.children("#link-edit-skin-type-form").val()).addClass("active");
        $("#editing-link-id").val(id);
      });

      // リンク変更ボタン押下時の挙動
      $("#mock_link_edit_btn").click(function(){
        var id = $("#editing-link-id").val();
        var form = $("#link-edit-form-" + id);
        form.children("#link-edit-name-form").val($("#mock-link-edit-name-form").val());
        form.children("#link-edit-url-form").val($("#mock-link-edit-url-form").val());
        form.children("#link-edit-comment-form").val($("#mock-link-edit-comment-form").val());
        form.children("#link-edit-skin-type-form").val($("#mock-link-edit-skin-type-form").val());
        form.submit();
      });

      // フォルダーソートボタン押下時の挙動
      $("#mock-folder-sort-button").click(function(){
        var width = $(window).width();
        // 現在の画面サイズがスマホ画面だった場合は、サイドバーを非表示にする
        if (width < 768) {
          $('.sidebar-toggle')[0].click();
        }
        var updateFolderIdArray =  $(".sidebar-menu").sortable("toArray").join(",");
        var sortURL = $("#folder-sort-button").attr("href") + updateFolderIdArray;
        $("#folder-sort-button").attr("href", sortURL);
        $("#folder-sort-modal").modal();
      });

      // リンクソートボタン押下時の挙動
      $("#mock-link-sort-button").click(function(){
        var updateLinkIdArray =  $(".link-box-area").sortable("toArray").join(",");
        var sortURL = $("#link-sort-button").attr("href") + updateLinkIdArray;
        $("#link-sort-button").attr("href", sortURL);
        $("#link-sort-modal").modal();
      });

      function toggleDetailArea(){
        $(".detail-area").toggleClass('active');
        // キャレットの向きを変更する
        if($(".detail-toggle-icon").hasClass('fa-caret-up')){
          $(".detail-toggle-icon").removeClass('fa-caret-up');
          $(".detail-toggle-icon").addClass('fa-caret-down');
        } else {
          $(".detail-toggle-icon").removeClass('fa-caret-down');
          $(".detail-toggle-icon").addClass('fa-caret-up');
        }
      }

      // 改行以外のHTMLタグを無効化するXSS対策
      function antiXSS(str){
        str = $('<dummy>').text(str).html().replace(/\\r\\n|\\r|\\n/g, '<br>');
        return str;
      }

      // 詳細エリアにデータをセット
      function setDetailArea(title, title_sub, note, skin_color) {
        // 一度すべての内容をクリア
        $(".detail-area-title").text("");
        $(".detail-area-note").text("");
        $(".detail-area-sub-title").text("");
        $(".detail-area").removeClass(function(index, className) {
          return (className.match(/\bdetail-area-skin-\S+/g) || []).join(' ');
        })
        $(".detail-area-title").text(title);
        $(".detail-area-sub-title").text(title_sub);
        $(".detail-area-note").html(antiXSS(note));
        $(".detail-area").addClass("detail-area-skin-" + skin_color);
      }

      // トースターメッセージの表示
      function viewToaster(message, message_type) {
        background_color = "#B8DCEF";
        if (message_type == "error") {
          background_color = "#F6CECE";
        }
        $.toast({
          text : message,
          showHideTransition : 'slide',
          bgColor : background_color,
          textColor : "#797F82",
          hideAfter: 5000,
          position: 'top-right',
          stack : 5,
          textAlign : 'left',
          position : 'bottom-right'
        });
      }

